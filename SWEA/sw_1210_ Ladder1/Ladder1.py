

# 먼저 사다리의 배열을 표현하고 나서
# 0. 출발점을 저장하기 위해 이동시킬 포인터는 따로 할당
# 1. 좌우 데이터 검사
#    만약 좌 또는 우에 1 데이터 존재하면 b -= 1 or b += 1 (왼쪽 이동 or 오른쪽 이동)
#    1 이란 데이터가 있는 곳이 없다면 a += 1 (아래로 이동)
# 2. a 가 99가 되었을 때 (사다리를 모두 내려갔을 때)
# 3. matrix[a][b] == 2 라면 그 때의 x 값과 테스트 번호 프린트

import sys
sys.stdin = open('input.txt')

for tc in range(1, 11):
    t = int(input())
    # 테스트 케이스
    matrix = []
    # 배열 저장을 위한 빈 리스트
    for i in range(100):
        row = list(map(int, input().split()))
        matrix.append(row)
        # row에 100개의 숫자 입력받아서
        # matrix에 append해서 100x100 배열 만들기
    
    # 각 출발점 x에 대해서
    for x in range(100):
        a = 0 
        b = x
        # 사다리를 조사할 포인터 지정

        if matrix[a][b] == 1:
            # 시작점 확인
            # 내려가다가 왼쪽 또는 오른쪽으로 가는 길을 만나면 움직임
            while a < 99:
                # 왼쪽으로 가야하는 경우 조사
                # 범위를 벗어나면 안되기 때문에 범위 안에 있는지 부터 확인하고
                # 길 탐색 : b-1 인덱스의 값이 1인지
                if b >= 1 and matrix[a][b-1] == 1:
                    # 길이 있으면 길이 없을때까지 계속 진행 (b-1 !=1 일때까지)
                    while b > 0 and matrix[a][b-1] == 1:
                        b -= 1
                    a += 1
                
                # 오른쪽으로 가야하는 경우 조사
                # 범위를 벗어나면 안되기 때문에 범위 안에 있는지 부터 확인하고
                # 길 탐색 b+1 인덱스의 값이 1인지
                elif b <= 98 and matrix[a][b+1] == 1:
                    # 길이 있으면 길이 없을때까지 계속 진행 (b+1 != 1 일때까지)
                    while b < 99 and matrix[a][b+1] == 1:
                        b += 1
                    a += 1
                # 모두 조사후에
                # 좌 우에 길이 없는 경우 내려감
                else:
                    a += 1

        # a 가 99가 되어 사다리 내려가기가 끝나면
        # 그 때의 값이 2인지 확인하고 맞다면 결과 출력
        if matrix[a][b] == 2:
            print(f'#{tc}',x)










